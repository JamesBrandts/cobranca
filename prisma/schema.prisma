datasource db {
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
}

model User {
  id    String @id @default(cuid())
  email String @unique

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  password  Password?
  notes     Note[]
  cobrancas Cobranca[]
  tags      Tag[]
}

model Password {
  hash String

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String @unique
}

model Note {
  id    String @id @default(cuid())
  title String
  body  String

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  userId String
}

model Contribuinte {
  id String @id @default(cuid())

  nome     String
  cpf_cnpj String
  telefone String
  email    String

  atividades Atividade[]
  economias  Economia[]

  dividas Divida[]

  cobrancas Cobranca[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Divida {
  id String @id @default(cuid())

  contribuinte   Contribuinte @relation(fields: [contribuinteId], references: [id], onDelete: Cascade, onUpdate: Cascade)
  contribuinteId String

  economiaId  String?
  atividadeId String?

  exercicio Int
  parcela   Int
  tipo      String

  tributo String
  valor   Int

  itens Item[]

  vencimento DateTime @default(now())

  createdAt DateTime   @default(now())
  updatedAt DateTime   @updatedAt
  Economia  Economia?  @relation(fields: [economiaId], references: [id])
  Atividade Atividade? @relation(fields: [atividadeId], references: [id])
}

model Economia {
  id String @id @default(cuid())

  contribuinte   Contribuinte @relation(fields: [contribuinteId], references: [id])
  contribuinteId String

  dividas Divida[]
}

model Atividade {
  id String @id @default(cuid())

  contribuinte   Contribuinte @relation(fields: [contribuinteId], references: [id])
  contribuinteId String

  dividas Divida[]
}

model Cobranca {
  id String @id @default(cuid())

  status String

  users   User[]

  contribuinte   Contribuinte @relation(fields: [contribuinteId], references: [id])
  contribuinteId String

  itens Item[]

  createdAt DateTime @default(now())

  tag  Tag   @relation(fields: [tagId], references: [id])
  tagId String
}

model Item {
  id String @id @default(cuid())

  status String

  cobranca   Cobranca @relation(fields: [cobrancaId], references: [id])
  cobrancaId String

  divida   Divida @relation(fields: [dividaId], references: [id])
  dividaId String

  createdAt DateTime @default(now())
}

model Tag {
  id String @id @default(cuid())

  nome String

  users User[]

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  cobrancas Cobranca[]
}

